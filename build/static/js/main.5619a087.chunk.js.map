{"version":3,"sources":["images/3.gif","images/35.gif","component/Header.js","component/Home.js","component/video.js","component/Search.js","component/Anime_info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","forceRefresh","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","push","state","searchTerm","handleChange","setState","target","value","react_default","a","createElement","className","NavLink","exact","to","onSubmit","type","onChange","placeholder","Component","Home","images","_this2","fetch","then","res","json","result","isLoaded","error","_this$state","message","map","image","Link","src","alt","Loading_Gif","video","video_link","video_info","anime_name","match","params","isLoadede","anime","controls","anime_search","console","log","Links","anime_info","Linkzz","App","BrowserRouter","component_Header","Switch","Route","path","component","Video_page","Search_page","Anime_info","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5619a087.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3.e781894c.gif\";","module.exports = __webpack_public_path__ + \"static/media/35.285a8c02.gif\";","import React, { Component } from 'react';\nimport '../App.css';\nimport { NavLink } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nexport const history = createBrowserHistory({\n  forceRefresh: true\n})\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchTerm: '' }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    history.push('/search/'+this.state.searchTerm);\n  };\n  \n  handleChange = e => {\n    this.setState({ searchTerm: e.target.value })\n  }\n  \n  render() {\n    return (\n      <div className='navbar navbar-expand-sm navbar-dark bg-dark shadow-sm '>\n        <div className='navbar-brand mr-auto '>\n        <NavLink exact to='/' className='navbar-brand mr-auto'>\n          Rising flare\n          </NavLink>\n       </div>\n        <form className='form-inline txt' onSubmit={this.handleSubmit}>\n          <input\n            type='text'\n            value={this.state.searchTerm}\n            onChange={this.handleChange}\n            className='form-control bg-dark text-white'\n            placeholder='Search'\n          />\n        </form>\n      </div>\n    );\n\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport '../App.css';\n// import axios from 'axios';\nimport Loading_Gif from '../images/3.gif'\n//import { setTimeout } from 'timers';\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n\n    state = {\n        images: []\n    }\n    componentDidMount() {\n        fetch(\"requesting_items\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        images: result\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n\n    }\n    render() {\n        const { error, isLoaded, images } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return (<div className=\"Loading\">\n                <img className=\"welcome-img\" src={Loading_Gif} alt=\"\" />\n                <h1 className=\"welcome-text\"> Rising flare</h1>\n            </div>)\n        } else {\n\n            return (\n                <div className=\"container\">\n                    {images.map(image => (\n                        <Link to={'/video/' + image}>\n                            <div className=\"card item shadow-lg p-3 mb-3 ml-3 mt-3 roundedm\">\n                                <img className=\"card-img-top img-size\" src={'/' + image} alt={image} />\n                                <p>{image}</p>\n                            </div>\n                        </Link>\n                    ))}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Loading_Gif from '../images/3.gif'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass video extends Component {\r\n    state = {\r\n        video_link: null,\r\n        video_info: null\r\n    }\r\n    componentDidMount() {\r\n        let anime_name = this.props.match.params.anime_name;\r\n        fetch(\"/sideos/\" + anime_name)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoadede: true,\r\n                        video_link: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoadede: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n        fetch(\"/title/\" + anime_name)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        video_info: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        let video = this.state.video_link;\r\n        let anime = this.state.video_info;\r\n        const { error, isLoaded , isLoadede } = this.state;\r\n        if (!isLoaded) {\r\n            return (<div className=\"Loading\">\r\n            <img className = \"welcome-img\" src={Loading_Gif} alt=\"\" />\r\n            <h1 className = \"welcome-text\"> Rising flare</h1>\r\n            </div>)\r\n        } else if(!isLoadede) {\r\n\r\n            return (\r\n                <div className='video_image'>\r\n\r\n                    <div className=\"container yellow\">\r\n                        <Link exact to={'../anime_info/' + anime}>\r\n                            <p className=\"anime-P\">\r\n                                {anime}</p>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"container navbar-dark bg-dark  shadow-sm\">\r\n                        <div className='player row'>\r\n                            <div className=\"col-lg-12 video\">\r\n                                <video controls src={video} > </video>\r\n                                <h1 className=\"text-white\"> be patient and have faith video link will arrive soon </h1>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div className='video_image'>\r\n\r\n                    <div className=\"container yellow\">\r\n                        <Link exact to={'../anime_info/' + anime}>\r\n                            <p className=\"anime-P\">\r\n                                {anime}</p>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"container navbar-dark bg-dark  shadow-sm\">\r\n                        <div className='player row'>\r\n                            <div className=\"col-lg-12 video\">\r\n                                <video controls src={video} > </video>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default video;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Loading_Gif from '../images/3.gif'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n    \r\n    state = {\r\n        images: []\r\n    }\r\n    componentDidMount() {\r\n        let anime_search = this.props.match.params.anime_search;\r\n        fetch(\"/Sear\" + anime_search)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        images: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n\r\n    }\r\n    render() {\r\n        const { error, isLoaded, images } = this.state;\r\n\r\n        console.log(images);\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return (    <div className=\"Loading\">\r\n            <img className = \"welcome-img\" src={Loading_Gif} alt=\"\" />\r\n            <h1 className = \"welcome-text\"> Rising flare</h1>\r\n            </div>)\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"container\">\r\n                    {images.map(image => (\r\n                        <Link exact to={'../anime_info/'+image}>\r\n                            <div className=\"card item shadow-lg p-3 mb-3 ml-3 mt-3 roundedm\">\r\n                                <img className=\"card-img-top img-size\" src={'/' + image} alt=\"\" />\r\n                                <p>{image}</p>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Loading_Gif from '../images/35.gif'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n\r\n    state = {\r\n        Links: []\r\n    }\r\n    componentDidMount() {\r\n        let anime_info = this.props.match.params.anime_info;\r\n        fetch(\"/info\" + anime_info)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        Links: result\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n\r\n    }\r\n    render() {\r\n        let anime_info = this.props.match.params.anime_info;\r\n        const { error, isLoaded, Links } = this.state;\r\n        let image = Links[1];\r\n        console.log(image);\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return (<div className=\"Loading\">\r\n                <img src={Loading_Gif} alt=\"\" />\r\n                <h1>Rising flare</h1>\r\n            </div>)\r\n        } else {\r\n\r\n            return (\r\n                <div className=\"video_image\">\r\n                    <div className=\"container yellow\">\r\n                        <p className=\"anime-P\">{\"anime info\"}</p>\r\n\r\n                    </div>\r\n                    <div className=\"container navbar-dark bg-dark  shadow-sm\">\r\n                        <div className=\"flex\">\r\n                            <img className=\"info_image\" src={'/' + image} alt=\"\" />\r\n                            <p className=\"info_name\">{anime_info}</p>\r\n                        </div>\r\n                        <div className=\"anime_Links\">\r\n                            {Links.map(Linkzz => (\r\n\r\n                                <Link exact to={'../video/' + Linkzz}>\r\n                                    <p>{Linkzz}</p>\r\n                                </Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport './CSS/400px.css';\nimport './CSS/450px.css';\nimport './CSS/450-600px.css';\nimport './CSS/600-800px.css';\nimport {BrowserRouter, Route ,Switch} from 'react-router-dom' \nimport Header from './component/Header'\nimport Home from './component/Home'\n//import TS from './component/Tagraba_Style'\nimport Video_page from './component/video.js'\nimport Search_page from './component/Search.js'\nimport Anime_info from './component/Anime_info.js'\nclass App extends Component  {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={Home}/> \n          <Route path='/video/:anime_name' component={Video_page}/>\n          <Route path='/search/:anime_search' component={Search_page}/>\n          <Route path='/anime_info/:anime_info' component={Anime_info}/>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}